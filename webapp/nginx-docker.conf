user nginx;

events {
  worker_connections 1024;
}

http {
  include       mime.types;
  default_type  application/octet-stream;
  client_max_body_size 2000M; # Increase this if you need to upload large files

  upstream backend {
    server unix:/tmp/myapp.socket;
  }

  upstream wiki {
    server 127.0.0.1:5000;
  }

  # App.kachhapa.local
  server {
    listen 80;
    server_name kachhapa.app;

    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri $uri/ /index.html;  # fallback to index.html
    }

    location /wiki/ {
        proxy_pass http://backend;
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, HEAD';
    }

    location /api {
      rewrite ^/api$ /api/ permanent;
    }

    location /socket.io {
      rewrite ^/socket.io$ /socket.io/ permanent;
    }

    location /api/ {
      access_log /var/log/nginx/api_access.log;
      error_log /var/log/nginx/api_error.log debug;

      proxy_pass http://backend;

      add_header 'Access-Control-Allow-Origin' '*';
      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, HEAD';
      add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization';
    }

    location /socket.io/ {
      access_log /var/log/nginx/ws_access.log;
      error_log /var/log/nginx/ws_error.log;

      proxy_pass http://backend;

      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $host;

      # Extra headers for WebSocket
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      # Ensure CORS headers are set correctly
      add_header 'Access-Control-Allow-Origin' '*' always;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, HEAD';
      add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization';
    }

    error_log /var/log/nginx/app_error.log;
    access_log /var/log/nginx/app_access.log;
  }

  # Localhost
  server {
    listen 80;
    server_name localhost;

    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri $uri/ /index.html;  # fallback to index.html
    }

    location /wiki/ {
        proxy_pass http://backend;
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, HEAD';
    }

    location /api {
      rewrite ^/api$ /api/ permanent;
    }

    location /socket.io {
      rewrite ^/socket.io$ /socket.io/ permanent;
    }

    location /api/ {
      access_log /var/log/nginx/api_access.log;
      error_log /var/log/nginx/api_error.log debug;

      proxy_pass http://backend;

      add_header 'Access-Control-Allow-Origin' '*';
      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, HEAD';
      add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization';
    }

    location /socket.io/ {
      access_log /var/log/nginx/ws_access.log;
      error_log /var/log/nginx/ws_error.log;

      proxy_pass http://backend;

      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $host;

      # Extra headers for WebSocket
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      # Ensure CORS headers are set correctly
      add_header 'Access-Control-Allow-Origin' '*' always;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, HEAD';
      add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization';
    }

    error_log /var/log/nginx/app_error.log;
    access_log /var/log/nginx/app_access.log;
  }
}